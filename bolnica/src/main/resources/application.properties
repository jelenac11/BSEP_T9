#server.port = 8080
server.port=${PORT:8080}

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.platform=postgres

spring.datasource.url=jdbc:postgresql://localhost:5432/BSEPBolnica

# promenite ovde na vasu lokalnu bazu
spring.datasource.username=postgres
spring.datasource.password=zovemsejelenajelena

#Umesto da sami pišemo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako želimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji će Spring Boot automatski pokrenuti pri pokretanju aplikacije
spring.jpa.hibernate.ddl-auto = create-drop

#Hibernate SQL upiti se ispisuju na IDE konzoli
spring.jpa.show-sql = true

#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
spring.jpa.properties.hibernate.format_sql=true

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimizacija SQL upita za Postgres bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

#https
security.require-ssl=true

# The format used for the keystore
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=src/main/resources/hospital.p12
# The password used to generate the certificate
server.ssl.key-store-password=jelenacarica99
# The alias mapped to the certificate
server.ssl.key-alias=1


keystore.filepath=src/main/resources/keyStore/keyStore.jks
keystore.password=jelenacarica99
truststore.path=src/main/resources/keyStore/trustStore.jks
truststore.password=jelenacarica99

auth0.audience=https://localhost:8080
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-lsmn3kc2.eu.auth0.com/

rules.template.severity = ../drools-spring-kjar/src/main/resources/sbnz/integracija/admin/templates/SeverityTemplate.drt
rules.template.messages = ../drools-spring-kjar/src/main/resources/sbnz/integracija/admin/templates/MessagesTemplate.drt
rules.template.lowT = ../drools-spring-kjar/src/main/resources/sbnz/integracija/doctor/templates/LowTemperature.drt
rules.template.highT = ../drools-spring-kjar/src/main/resources/sbnz/integracija/doctor/templates/HighTemperature.drt
rules.template.lowOL = ../drools-spring-kjar/src/main/resources/sbnz/integracija/doctor/templates/LowOxygenLevel.drt
rules.template.pressure = ../drools-spring-kjar/src/main/resources/sbnz/integracija/doctor/templates/Pressure.drt

rules.drl.severity = ../drools-spring-kjar/src/main/resources/sbnz/integracija/admin/Severity
rules.drl.messages = ../drools-spring-kjar/src/main/resources/sbnz/integracija/admin/Messages
rules.drl.lowT = ../drools-spring-kjar/src/main/resources/sbnz/integracija/doctor/LowTemperature
rules.drl.highT = ../drools-spring-kjar/src/main/resources/sbnz/integracija/doctor/HighTemperature
rules.drl.lowOL = ../drools-spring-kjar/src/main/resources/sbnz/integracija/doctor/LowOxygenLevel
rules.drl.pressure = ../drools-spring-kjar/src/main/resources/sbnz/integracija/doctor/Pressure

spring:
  data:
    mongodb:
      username: bsep
      password: jelenacarica99
      uri: mongodb://${spring.data.mongodb.username}:${spring.data.mongodb.password}@localhost:27017/?authSource=sbnz&authMechanism=SCRAM-SHA-256
      database: sbnz
